"""Added Everything to DB

Revision ID: c6da5d58d983
Revises: 708d30868be4
Create Date: 2025-09-30 20:04:24.201697

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'c6da5d58d983'
down_revision: Union[str, None] = '708d30868be4'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('booking_field_party_statuses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('previous_id', sa.Integer(), nullable=True),
    sa.Column('next_id', sa.Integer(), nullable=True),
    sa.Column('title_ru', sa.String(length=256), nullable=False),
    sa.Column('title_kk', sa.String(length=256), nullable=True),
    sa.Column('title_en', sa.String(length=256), nullable=True),
    sa.Column('is_first', sa.Boolean(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_last', sa.Boolean(), nullable=False),
    sa.Column('previous_allowed_values', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('next_allowed_values', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['next_id'], ['booking_field_party_statuses.id'], onupdate='CASCADE', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['previous_id'], ['booking_field_party_statuses.id'], onupdate='CASCADE', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('booking_field_party_requests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('status_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('field_id', sa.Integer(), nullable=True),
    sa.Column('field_party_id', sa.Integer(), nullable=True),
    sa.Column('payment_transaction_id', sa.Integer(), nullable=True),
    sa.Column('total_price', sa.Numeric(precision=20, scale=2), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_canceled', sa.Boolean(), nullable=False),
    sa.Column('is_paid', sa.Boolean(), nullable=False),
    sa.Column('is_refunded', sa.Boolean(), nullable=False),
    sa.Column('cancel_reason', sa.String(), nullable=True),
    sa.Column('cancel_refund_reason', sa.String(), nullable=True),
    sa.Column('email', sa.String(length=256), nullable=True),
    sa.Column('phone', sa.String(length=256), nullable=True),
    sa.Column('paid_until', sa.DateTime(), nullable=True),
    sa.Column('paid_at', sa.DateTime(), nullable=True),
    sa.Column('paid_order', sa.String(length=256), nullable=True),
    sa.Column('start_at', sa.DateTime(), nullable=False),
    sa.Column('end_at', sa.DateTime(), nullable=False),
    sa.Column('reschedule_start_at', sa.DateTime(), nullable=True),
    sa.Column('reschedule_end_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['field_id'], ['fields.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['field_party_id'], ['field_parties.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['payment_transaction_id'], ['payment_transactions.id'], onupdate='CASCADE', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['status_id'], ['booking_field_party_statuses.id'], onupdate='CASCADE', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('booking_field_party_and_payment_transactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('request_id', sa.Integer(), nullable=False),
    sa.Column('payment_transaction_id', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_primary', sa.Boolean(), nullable=False),
    sa.Column('link_type', sa.String(length=256), nullable=False),
    sa.Column('link_reason', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['payment_transaction_id'], ['payment_transactions.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['request_id'], ['booking_field_party_requests.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('booking_field_party_and_payment_transactions')
    op.drop_table('booking_field_party_requests')
    op.drop_table('booking_field_party_statuses')
    # ### end Alembic commands ###
