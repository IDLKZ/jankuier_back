"""Add everything for ProductOrder

Revision ID: ec7665c7b257
Revises: 419b830b398e
Create Date: 2025-09-28 18:07:30.443149

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ec7665c7b257'
down_revision: Union[str, None] = '419b830b398e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('product_order_item_statuses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('previous_id', sa.Integer(), nullable=True),
    sa.Column('next_id', sa.Integer(), nullable=True),
    sa.Column('title_ru', sa.String(length=256), nullable=False),
    sa.Column('title_kk', sa.String(length=256), nullable=True),
    sa.Column('title_en', sa.String(length=256), nullable=True),
    sa.Column('is_first', sa.Boolean(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_last', sa.Boolean(), nullable=False),
    sa.Column('previous_allowed_values', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('next_allowed_values', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['next_id'], ['product_order_item_statuses.id'], onupdate='CASCADE', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['previous_id'], ['product_order_item_statuses.id'], onupdate='CASCADE', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('product_order_statuses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('previous_id', sa.Integer(), nullable=True),
    sa.Column('next_id', sa.Integer(), nullable=True),
    sa.Column('title_ru', sa.String(length=256), nullable=False),
    sa.Column('title_kk', sa.String(length=256), nullable=True),
    sa.Column('title_en', sa.String(length=256), nullable=True),
    sa.Column('is_first', sa.Boolean(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_last', sa.Boolean(), nullable=False),
    sa.Column('previous_allowed_values', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('next_allowed_values', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['next_id'], ['product_order_statuses.id'], onupdate='CASCADE', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['previous_id'], ['product_order_statuses.id'], onupdate='CASCADE', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('product_orders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('status_id', sa.Integer(), nullable=True),
    sa.Column('canceled_by_id', sa.Integer(), nullable=True),
    sa.Column('payment_transaction_id', sa.Integer(), nullable=True),
    sa.Column('shipping_total_price', sa.Numeric(precision=20, scale=2), nullable=False),
    sa.Column('taxes_price', sa.Numeric(precision=20, scale=2), nullable=False),
    sa.Column('total_price', sa.Numeric(precision=20, scale=2), nullable=False),
    sa.Column('refunded_total', sa.Numeric(precision=20, scale=2), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_canceled', sa.Boolean(), nullable=False),
    sa.Column('is_paid', sa.Boolean(), nullable=False),
    sa.Column('is_refunded', sa.Boolean(), nullable=False),
    sa.Column('cancel_reason', sa.String(), nullable=True),
    sa.Column('cancel_refund_reason', sa.String(), nullable=True),
    sa.Column('email', sa.String(length=256), nullable=True),
    sa.Column('phone', sa.String(length=256), nullable=True),
    sa.Column('paid_until', sa.DateTime(), nullable=True),
    sa.Column('paid_at', sa.DateTime(), nullable=True),
    sa.Column('paid_order', sa.String(length=256), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['canceled_by_id'], ['users.id'], onupdate='CASCADE', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['payment_transaction_id'], ['payment_transactions.id'], onupdate='CASCADE', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['status_id'], ['product_order_statuses.id'], onupdate='CASCADE', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('product_order_and_payment_transactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_order_id', sa.Integer(), nullable=False),
    sa.Column('payment_transaction_id', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_primary', sa.Boolean(), nullable=False),
    sa.Column('link_type', sa.String(length=256), nullable=False),
    sa.Column('link_reason', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['payment_transaction_id'], ['payment_transactions.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['product_order_id'], ['product_orders.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('product_order_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('status_id', sa.Integer(), nullable=True),
    sa.Column('canceled_by_id', sa.Integer(), nullable=True),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('variant_id', sa.Integer(), nullable=True),
    sa.Column('from_city_id', sa.Integer(), nullable=False),
    sa.Column('to_city_id', sa.Integer(), nullable=True),
    sa.Column('qty', sa.Integer(), nullable=False),
    sa.Column('sku', sa.String(length=256), nullable=True),
    sa.Column('product_price', sa.Numeric(precision=20, scale=2), nullable=False),
    sa.Column('delta_price', sa.Numeric(precision=20, scale=2), nullable=False),
    sa.Column('shipping_price', sa.Numeric(precision=20, scale=2), nullable=False),
    sa.Column('unit_price', sa.Numeric(), sa.Computed('(product_price + delta_price + shipping_price)::DOUBLE PRECISION', persisted=True), nullable=False),
    sa.Column('total_price', sa.Numeric(), sa.Computed('((product_price + delta_price + shipping_price) * qty)::DOUBLE PRECISION', persisted=True), nullable=False),
    sa.Column('refunded_total', sa.Numeric(precision=20, scale=2), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_canceled', sa.Boolean(), nullable=False),
    sa.Column('is_paid', sa.Boolean(), nullable=False),
    sa.Column('is_refunded', sa.Boolean(), nullable=False),
    sa.Column('cancel_reason', sa.String(), nullable=True),
    sa.Column('cancel_refund_reason', sa.String(), nullable=True),
    sa.Column('delivery_date', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['canceled_by_id'], ['users.id'], onupdate='CASCADE', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['from_city_id'], ['cities.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['order_id'], ['product_orders.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['status_id'], ['product_order_item_statuses.id'], onupdate='CASCADE', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['to_city_id'], ['cities.id'], onupdate='CASCADE', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['variant_id'], ['product_variants.id'], onupdate='CASCADE', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('product_order_item_histories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('order_item_id', sa.Integer(), nullable=False),
    sa.Column('status_id', sa.Integer(), nullable=True),
    sa.Column('responsible_user_id', sa.Integer(), nullable=True),
    sa.Column('message_ru', sa.String(length=256), nullable=True),
    sa.Column('message_kk', sa.String(length=256), nullable=True),
    sa.Column('message_en', sa.String(length=256), nullable=True),
    sa.Column('is_passed', sa.Boolean(), nullable=True),
    sa.Column('cancel_reason', sa.String(), nullable=True),
    sa.Column('taken_at', sa.DateTime(), nullable=True),
    sa.Column('passed_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['order_item_id'], ['product_order_items.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['responsible_user_id'], ['users.id'], onupdate='CASCADE', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['status_id'], ['product_order_item_statuses.id'], onupdate='CASCADE', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('product_order_item_verification_codes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('order_item_id', sa.Integer(), nullable=False),
    sa.Column('responsible_user_id', sa.Integer(), nullable=True),
    sa.Column('code', sa.String(length=256), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['order_item_id'], ['product_order_items.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['responsible_user_id'], ['users.id'], onupdate='CASCADE', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_product_order_item_verification_codes_code'), 'product_order_item_verification_codes', ['code'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_product_order_item_verification_codes_code'), table_name='product_order_item_verification_codes')
    op.drop_table('product_order_item_verification_codes')
    op.drop_table('product_order_item_histories')
    op.drop_table('product_order_items')
    op.drop_table('product_order_and_payment_transactions')
    op.drop_table('product_orders')
    op.drop_table('product_order_statuses')
    op.drop_table('product_order_item_statuses')
    # ### end Alembic commands ###
